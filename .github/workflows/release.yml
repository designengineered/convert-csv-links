name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # macOS first
          - os: macos-latest
            artifact_name: "csv-to-links.app"
            asset_name: "csv-to-links-macos.app"
          # Linux second
          - os: ubuntu-latest
            artifact_name: "csv-to-links"
            asset_name: "csv-to-links-linux"
          # Windows last
          - os: windows-latest
            artifact_name: "csv-to-links.exe"
            asset_name: "csv-to-links-windows.exe"
            msystem: MINGW64
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      # macOS-specific setup
      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install gcc || brew link --overwrite gcc

      # Linux-specific setup
      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc libgl1-mesa-dev xorg-dev

      # Windows-specific setup
      - name: Setup MSYS2 (Windows)
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-cairo
            mingw-w64-x86_64-gcc-libs
            base-devel

      - name: Install Fyne
        run: go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          export PATH="/mingw64/bin:$PATH"
          export CGO_ENABLED=1
          go mod tidy
          fyne package -os windows -icon icon.png

      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          export CGO_ENABLED=1
          go mod tidy
          fyne package -os linux -icon icon.png
        shell: bash

      - name: Build macOS
        if: matrix.os == 'macos-latest'
        run: |
          export CGO_ENABLED=1
          go mod tidy
          fyne package -os darwin -icon icon.png
        shell: bash

      - name: List files
        run: ls -la
        shell: bash

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: |
            csv-to-links
            csv-to-links.exe
            csv-to-links.app/**/*
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
