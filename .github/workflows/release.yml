name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      # Windows-specific setup
      - name: Set up MinGW (Windows)
        if: matrix.os == 'windows-latest'
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64

      # Linux-specific setup
      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc libgl1-mesa-dev xorg-dev

      # macOS-specific setup
      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install gcc

      - name: Install Fyne
        run: go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: Build
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            fyne package -os windows -icon icon.png -name csv-to-links
          elif [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            fyne package -os linux -icon icon.png -name csv-to-links
          else
            fyne package -os darwin -icon icon.png -name csv-to-links
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: csv-to-links-${{ matrix.os }}
          path: |
            csv-to-links*
            *.app

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            csv-to-links-windows-latest/csv-to-links.exe
            csv-to-links-ubuntu-latest/csv-to-links
            csv-to-links-macos-latest/*.app
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
